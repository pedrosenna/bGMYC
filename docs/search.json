[{"path":"https://pedrosenna.github.io/bGMYC/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Noah Reid. Maintainer.","code":""},{"path":"https://pedrosenna.github.io/bGMYC/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Reid N (2025). bGMYC: Bayesian MCMC implementation general mixed Yule-coalescent model species delimitation.. R package version 1.0.3, https://pedrosenna.github.io/bGMYC/.","code":"@Manual{,   title = {bGMYC: A Bayesian MCMC implementation of the general mixed Yule-coalescent model for species delimitation.},   author = {Noah Reid},   year = {2025},   note = {R package version 1.0.3},   url = {https://pedrosenna.github.io/bGMYC/}, }"},{"path":"https://pedrosenna.github.io/bGMYC/index.html","id":"bgmyc","dir":"","previous_headings":"","what":"A Bayesian MCMC implementation of the general mixed Yule-coalescent model for species delimitation.","title":"A Bayesian MCMC implementation of the general mixed Yule-coalescent model for species delimitation.","text":"Stable Version ‘bGMYC’ R Package using R versions 4.x.x","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bGMYC-package.html","id":null,"dir":"Reference","previous_headings":"","what":"A Bayesian MCMC implementation of the general mixed Yule-coalescent model for species delimitation. — bGMYC-package","title":"A Bayesian MCMC implementation of the general mixed Yule-coalescent model for species delimitation. — bGMYC-package","text":"package implements Bayesian version general mixed Yule-coalescent model species delimitation introduced Pons et al. 2006. uses Markov Chain Monte Carlo simulation evaluate posterior distribution model uses flexible method specifying prior distributions model parameters. primary strength method pre-existing implementation allows use multiple trees sampled MCMC analysis, eliminating conditioning results single point estimate phylogenetic tree, often associated high uncertainty.","code":""},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/bGMYC-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A Bayesian MCMC implementation of the general mixed Yule-coalescent model for species delimitation. — bGMYC-package","text":"Noah M. Reid Maintainer: Noah M. Reid <noah.reid@gmail.com>","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bGMYC-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"A Bayesian MCMC implementation of the general mixed Yule-coalescent model for species delimitation. — bGMYC-package","text":"Pons et al. 2006 Reid Carstens 2012","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bGMYC-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"A Bayesian MCMC implementation of the general mixed Yule-coalescent model for species delimitation. — bGMYC-package","text":"","code":"#for user data, ape tree format is required. easiest to input a nexus tree file using ape function \"read.nexus\" #in this case, load test data, an ape multiPhylo object data(east10)  #two primary functions for running analysis: bgmyc.singlephy and bgmyc.multiphylo #run bGMYC on a single tree (phylo object) result.single<-bgmyc.singlephy(phylo=east10[[1]], mcmc=100, burnin=1, thinning=10) #> You are running bGMYC on a single phylogenetic tree. #> This tree contains  215  tips. #> The Yule process rate change parameter has a uniform prior ranging from  0  to  2 . #> The coalescent process rate change parameter has a uniform prior ranging from  0  to  2 . #> The threshold parameter, which is equal to the number of species, has a uniform prior ranging from  2  to  51 . The upper bound of this prior should not be more than the number of tips in your trees. #> The MCMC will start with the Yule parameter set to  1 . #> The MCMC will start with the coalescent parameter set to  0.5 . #> The MCMC will start with the threshold parameter set to  50 . If this number is greater than the number of tips in your tree, an error will result. #> Given your settings for mcmc, burnin and thinning, your analysis will result in  9.9  samples being retained. #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.59 0.42 0.32   #run bGMYC on multiple trees (multiphylo object) result.multi<-bgmyc.multiphylo(multiphylo=east10, mcmc=100, burnin=1, thinning=10) #> You are running a multi tree analysis on  10  trees. #> These trees each contain  215  tips. #> The Yule process rate change parameter has a uniform prior ranging from  0  to  2 . #> The coalescent process rate change parameter has a uniform prior ranging from  0  to  2 . #> The threshold parameter, which is equal to the number of species, has a uniform prior ranging from  2  to  51 . The upper bound of this prior should not be more than the number of tips in your trees. #> The MCMC will start with the Yule parameter set to  1 . #> The MCMC will start with the coalescent parameter set to  0.5 . #> The MCMC will start with the threshold parameter set to  50 . If this number is greater than the number of tips in your tree, an error will result. #> Given your settings for mcmc, burnin and thinning, your analysis will result in  99  samples being retained. #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.62 0.49 0.39  #> tree number  1 is finished  #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.69 0.54 0.35  #> tree number  2 is finished  #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.72 0.48 0.29  #> tree number  3 is finished  #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.66 0.51 0.48  #> tree number  4 is finished  #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.53 0.35 0.37  #> tree number  5 is finished  #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.64 0.51 0.26  #> tree number  6 is finished  #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.63 0.27 0.24  #> tree number  7 is finished  #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.56 0.39 0.37  #> tree number  8 is finished  #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.61 0.43 0.34  #> tree number  9 is finished  #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.74 0.48 0.41  #> tree number  10 is finished   if (FALSE) { # \\dontrun{ #several functions for processing and visualizing output #visualize MCMC output plot(result.single) } # }  #for multiple trees, visualize MCMC output OR pool samples from across trees into a single matrix using plot=FALSE plot(result.multi, plot=FALSE)->parameter.matrix #> Error in xy.coords(x, y, xlabel, ylabel, log): 'x' is a list, but does not have components 'x' and 'y'  #get the posterior probabilities of each possible species cluster #optionally writes to an output file.  bgmyc.spec(res=result.multi)->result.spec  #produce a sequence by sequence matrix of probabilities of conspecificity spec.probmat(result.multi)->result.probmat  if (FALSE) { # \\dontrun{ #plot the matrix of conspecificity probabilities #provide a single tree to order the matrix plot(result.probmat, east10[[1]]) } # }"},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.dataprep.html","id":null,"dir":"Reference","previous_headings":"","what":"prepares a tree for analysis — bgmyc.dataprep","title":"prepares a tree for analysis — bgmyc.dataprep","text":"takes ape \"phylo\" object turns input downstream functions","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.dataprep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"prepares a tree for analysis — bgmyc.dataprep","text":"","code":"bgmyc.dataprep(tr)"},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.dataprep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"prepares a tree for analysis — bgmyc.dataprep","text":"tr ape \"phylo\" object.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.gibbs.html","id":null,"dir":"Reference","previous_headings":"","what":"MCMC sampler — bgmyc.gibbs","title":"MCMC sampler — bgmyc.gibbs","text":"function samples GMYC model using output bgmyc.dataprep data.","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.gibbs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MCMC sampler — bgmyc.gibbs","text":"","code":"bgmyc.gibbs(data, m, burnin = 1, thinning = 1, py1, py2, pc1, pc2, t1, t2, scale = c(20, 10, 5), start = c(1, 0.5, 50), likelihood, prior)"},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.gibbs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"MCMC sampler — bgmyc.gibbs","text":"data output bgmyc.dataprep m number samples take Markov Chain burnin number samples discard burn-thinning interval samples retained Markov Chain py1 governs prior Yule (speciation) rate change parameter. using default prior distribution, lower bound uniform distribution. can influential prior three. rate change parameterized n^py n number lineages waiting interval. 50 sequences analysis Yule rate change parameter 2, allows potential 50-fold increase speciation rate. unrealistic parameter value can cause threshold Yule Coalescent process difficult distinguish. reasonable upper bound prior probably less 1.5 (potential 7-fold increase). modify prior function use different distribution entirely. py2 governs prior Yule rate change parameter. using default prior distribution, upper bound uniform distribution. pc1 governs prior coalescent rate change parameter. using default prior distribution, lower bound uniform distribution. rate change parameterized (n(n-1))^pc n number lineages waiting interval (see Pons et al. 2006). principle pc can interpreted change effective population size (pc<1 decline, pc>1 growth) identical haplotypes must excluded analysis accurate biological interpretation possible. pc2 governs prior coalescent rate change parameter. using default prior distribution, upper bound uniform distribution. t1 governs prior threshold parameter. lower bound uniform distribution. bounds uniform distribution 1 greater number unique haplotypes analysis. t2 governs prior threshold parameter. upper bound uniform distribution scale vector scale parameters governing proposal distributions markov chain. first Yule coalescent rate change parameters. increasing makes proposals conservative. third threshold parameter. increasing makes proposals liberal. start vector starting parameters order scale parameters, py, pc, t. t may need set impossible given dataset. likelihood function calculates likelihood data given model parameters. case, bgmyc.lik function provided work. prior function returns prior probability parameter value. case bgmyc.prior function provided. function principle easily modified new one used . e.g., replace uniform distribution density functions (dunif) gamma lognormal distributions (dgamma, dlnorm).","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.gibbs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"MCMC sampler — bgmyc.gibbs","text":"function called bgmyc.singlephy bgmyc.multiphylo, probably reason use .","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.gibbs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"MCMC sampler — bgmyc.gibbs","text":"Returns list two primary elements.","code":""},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.gibbs.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"MCMC sampler — bgmyc.gibbs","text":"Noah M. Reid","code":""},{"path":[]},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.gibbs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"MCMC sampler — bgmyc.gibbs","text":"","code":"#prepare a tree for analysis: data(east10) bgmyc.dataprep(east10[[1]])->input  #analyze the tree output<-bgmyc.gibbs(input, 100, burnin = 1, thinning = 1, py1=0, py2=1.5, pc1=0, pc2=2, t1=2, t2=75, scale = c(20, 10, 5), start = c(1, 0.5, 50), likelihood=bgmyc.lik, prior=bgmyc.prior) #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.45 0.38 0.27"},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.lik.html","id":null,"dir":"Reference","previous_headings":"","what":"gmyc likelihood function — bgmyc.lik","title":"gmyc likelihood function — bgmyc.lik","text":"returns log likelihood model given data parameter values","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.lik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"gmyc likelihood function — bgmyc.lik","text":"","code":"bgmyc.lik(params, data)"},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.lik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"gmyc likelihood function — bgmyc.lik","text":"params vector parameter values evaluated order: py, pc, t data output gmyc.dataprep","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.lik.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"gmyc likelihood function — bgmyc.lik","text":"probably reason use function , can optimized using \"optim\"","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.lik.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"gmyc likelihood function — bgmyc.lik","text":"returns log likelihood model given data parameter values","code":""},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.lik.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"gmyc likelihood function — bgmyc.lik","text":"Noah M. Reid","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.multiphylo.html","id":null,"dir":"Reference","previous_headings":"","what":"multi-tree GMYC analysis — bgmyc.multiphylo","title":"multi-tree GMYC analysis — bgmyc.multiphylo","text":"conducts MCMC analysis multiple trees","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.multiphylo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"multi-tree GMYC analysis — bgmyc.multiphylo","text":"","code":"bgmyc.multiphylo(multiphylo, mcmc, burnin, thinning, py1 = 0, py2 = 2, pc1 = 0, pc2 = 2, t1 = 2, t2 = 51, scale = c(20, 10, 5), start = c(1, 0.5, 50), sampler = bgmyc.gibbs, likelihood = bgmyc.lik, prior = bgmyc.prior)"},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.multiphylo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"multi-tree GMYC analysis — bgmyc.multiphylo","text":"multiphylo ape \"multiphylo\" object mcmc number samples take Markov Chain burnin number samples discard burn-thinning interval samples retained Markov Chain py1 governs prior Yule (speciation) rate change parameter. using default prior distribution, lower bound uniform distribution. can influential prior three. rate change parameterized n^py n number lineages waiting interval (see Pons et al. 2006). 50 sequences analysis Yule rate change parameter 2, allows potential 50-fold increase speciation rate. unrealistic parameter value can cause threshold Yule Coalescent process difficult distinguish. reasonable upper bound prior probably less 1.5 (potential 7-fold increase). modify prior function use different distribution entirely. py2 governs prior Yule rate change parameter. using default prior distribution, upper bound uniform distribution. pc1 governs prior coalescent rate change parameter. using default prior distribution, lower bound uniform distribution. rate change parameterized (n(n-1))^pc n number lineages waiting interval (see Pons et al. 2006). principle pc can interpreted change effective population size (pc<1 decline, pc>1 growth) identical haplotypes must excluded analysis accurate biological interpretation possible. pc2 governs prior coalescent rate change parameter. using default prior distribution, upper bound uniform distribution. t1 governs prior threshold parameter. lower bound uniform distribution. bounds uniform distribution 1 greater number unique haplotypes analysis. t2 governs prior threshold parameter. upper bound uniform distribution. scale vector scale parameters governing proposal distributions markov chain. first Yule coalescent rate change parameters. increasing makes proposals conservative. third threshold parameter. increasing makes proposals liberal. start vector starting parameters order scale parameters, py, pc, t. t may need set impossible given dataset. sampler MCMC sampler function. function provided bgmyc.gibbs. likelihood function calculates likelihood data given model parameters. case, bgmyc.lik function provided work. prior function returns prior probability parameter value. case bgmyc.prior function provided. function principle easily modified new one used . e.g., replace uniform distribution density functions (dunif) gamma lognormal distributions (dgamma, dlnorm).","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.multiphylo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"multi-tree GMYC analysis — bgmyc.multiphylo","text":"conducts Markov Chain Monte Carlo sampling GMYC model trees \"multiphylo\" object. MCMC output checked non-stationary behavior using plot(output). matrix containing MCMC samples pooled across trees can obtained using plot(output, plot=FALSE)","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.multiphylo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"multi-tree GMYC analysis — bgmyc.multiphylo","text":"list class \"multibgmyc\" containing series objects class \"singlebgmyc\" contains MCMC samples tree.","code":""},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.multiphylo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"multi-tree GMYC analysis — bgmyc.multiphylo","text":"Noah M. Reid","code":""},{"path":[]},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.multiphylo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"multi-tree GMYC analysis — bgmyc.multiphylo","text":"","code":"#run an analysis on multiple trees.  data(east10) result.multi<-bgmyc.multiphylo(east10, 100, burnin=1, thinning=1, py1 = 0, py2 = 2, pc1 = 0, pc2 = 2, t1 = 2, t2 = 51, scale = c(20, 10, 5), start = c(1, 0.5, 50), sampler = bgmyc.gibbs, likelihood = bgmyc.lik, prior = bgmyc.prior) #> You are running a multi tree analysis on  10  trees. #> These trees each contain  215  tips. #> The Yule process rate change parameter has a uniform prior ranging from  0  to  2 . #> The coalescent process rate change parameter has a uniform prior ranging from  0  to  2 . #> The threshold parameter, which is equal to the number of species, has a uniform prior ranging from  2  to  51 . The upper bound of this prior should not be more than the number of tips in your trees. #> The MCMC will start with the Yule parameter set to  1 . #> The MCMC will start with the coalescent parameter set to  0.5 . #> The MCMC will start with the threshold parameter set to  50 . If this number is greater than the number of tips in your tree, an error will result. #> Given your settings for mcmc, burnin and thinning, your analysis will result in  990  samples being retained. #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.59 0.44 0.3  #> tree number  1 is finished  #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.7 0.39 0.36  #> tree number  2 is finished  #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.64 0.42 0.31  #> tree number  3 is finished  #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.67 0.49 0.45  #> tree number  4 is finished  #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.67 0.39 0.33  #> tree number  5 is finished  #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.67 0.48 0.2  #> tree number  6 is finished  #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.69 0.46 0.3  #> tree number  7 is finished  #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.66 0.33 0.33  #> tree number  8 is finished  #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.59 0.47 0.41  #> tree number  9 is finished  #> 10 %  #> 20 %  #> 30 %  #> 40 %  #> 50 %  #> 60 %  #> 70 %  #> 80 %  #> 90 %  #> 100 %  #> acceptance rates  #>  py pc th  #>  0.61 0.56 0.44  #> tree number  10 is finished  #see ?bGMYC for visualization and summary instructions."},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.point.html","id":null,"dir":"Reference","previous_headings":"","what":"returns a point estimate of species limits based on a posterior probability threshold input by the user — bgmyc.point","title":"returns a point estimate of species limits based on a posterior probability threshold input by the user — bgmyc.point","text":"function processes output bgmyc analysis produces single point estimate species limits based posterior probability threshold","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.point.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"returns a point estimate of species limits based on a posterior probability threshold input by the user — bgmyc.point","text":"","code":"bgmyc.point(probmat, ppcutoff)"},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.point.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"returns a point estimate of species limits based on a posterior probability threshold input by the user — bgmyc.point","text":"probmat output function spec.probmat class \"bgmycprobmat\" ppcutoff posterior probability threshold lumping samples species. e.g. 0.05 selected, individuals greater 0.05 posterior probability conspecificity lumped species returned.","code":""},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.point.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"returns a point estimate of species limits based on a posterior probability threshold input by the user — bgmyc.point","text":"returns R list entry gives members species meets threshold. worth noting sometimes, uncertainty phylogenetic tree, individuals \"species\" resulting given threshold greater specified probability conspecificity. can connected, however, individuals whose probability conspecificity greater threshold.","code":""},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.point.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"returns a point estimate of species limits based on a posterior probability threshold input by the user — bgmyc.point","text":"Noah M. Reid","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.prior.html","id":null,"dir":"Reference","previous_headings":"","what":"a function to return the prior probability of a model — bgmyc.prior","title":"a function to return the prior probability of a model — bgmyc.prior","text":"given model parameter values parameters governing prior distribution , function returns prior probability model","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.prior.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"a function to return the prior probability of a model — bgmyc.prior","text":"","code":"bgmyc.prior(params, py1, py2, pc1, pc2, t1, t2)"},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.prior.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"a function to return the prior probability of a model — bgmyc.prior","text":"params parameter values function returns prior probabilities. order: py, pc, t py1 governs prior Yule (speciation) rate change parameter. using default prior distribution, lower bound uniform distribution. can influential prior three. rate change parameterized n^py n number lineages waiting interval (see Pons et al. 2006). 50 sequences analysis Yule rate change parameter 2, allows potential 50-fold increase speciation rate. unrealistic parameter value can cause threshold Yule Coalescent process difficult distinguish. reasonable upper bound prior probably less 1.5 (potential 7-fold increase). modify prior function use different distribution entirely. py2 governs prior Yule rate change parameter. using default prior distribution, upper bound uniform distribution. pc1 governs prior coalescent rate change parameter. using default prior distribution, lower bound uniform distribution. rate change parameterized (n(n-1))^pc n number lineages waiting interval (see Pons et al. 2006). principle pc can interpreted change effective population size (pc<1 decline, pc>1 growth) identical haplotypes must excluded analysis accurate biological interpretation possible. pc2 governs prior coalescent rate change parameter. using default prior distribution, upper bound uniform distribution. t1 governs prior threshold parameter. lower bound uniform distribution. bounds uniform distribution 1 greater number unique haplotypes analysis. t2 governs prior threshold parameter. upper bound uniform distribution","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.prior.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"a function to return the prior probability of a model — bgmyc.prior","text":"function used bgmyc.gibbs, bgmyc.singlephy bgmyc.multiphylo get model prior probabilities MCMC. parameter prior uniform distribution whose parameters set . function can easily modified use either gamma lognormal priors fit smoothly existing functions.","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.prior.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"a function to return the prior probability of a model — bgmyc.prior","text":"returns log prior probability","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.singlephy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"single tree GMYC analysis — bgmyc.singlephy","text":"","code":"bgmyc.singlephy(phylo, mcmc, burnin, thinning, py1 = 0, py2 = 2, pc1 = 0, pc2 = 2, t1 = 2, t2 = 51, scale = c(20, 10, 5), start = c(1, 0.5, 50), sampler = bgmyc.gibbs, likelihood = bgmyc.lik, prior = bgmyc.prior)"},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.singlephy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"single tree GMYC analysis — bgmyc.singlephy","text":"phylo ape \"phylo\" object mcmc number samples take Markov Chain burnin number samples discard burn-thinning interval samples retained Markov Chain py1 governs prior Yule (speciation) rate change parameter. using default prior distribution, lower bound uniform distribution. can influential prior three. rate change parameterized n^py n number lineages waiting interval (see Pons et al. 2006). 50 sequences analysis Yule rate change parameter 2, allows potential 50-fold increase speciation rate. unrealistic parameter value can cause threshold Yule Coalescent process difficult distinguish. reasonable upper bound prior probably less 1.5 (potential 7-fold increase). modify prior function use different distribution entirely. py2 governs prior Yule rate change parameter. using default prior distribution, upper bound uniform distribution. pc1 governs prior coalescent rate change parameter. using default prior distribution, lower bound uniform distribution. rate change parameterized (n(n-1))^pc n number lineages waiting interval (see Pons et al. 2006). principle pc can interpreted change effective population size (pc<1 decline, pc>1 growth) identical haplotypes must excluded analysis accurate biological interpretation possible. pc2 governs prior coalescent rate change parameter. using default prior distribution, upper bound uniform distribution. t1 governs prior threshold parameter. lower bound uniform distribution. bounds uniform distribution 1 greater number unique haplotypes analysis. t2 governs prior threshold parameter. upper bound uniform distribution scale vector scale parameters governing proposal distributions markov chain. first Yule coalescent rate change parameters. increasing makes proposals conservative. third threshold parameter. increasing makes proposals liberal. start vector starting parameters order scale parameters, py, pc, t. t may need set impossible given dataset. sampler MCMC sampler function. function provided bgmyc.gibbs. likelihood function calculates likelihood data given model parameters. case, bgmyc.lik function provided work. prior function returns prior probability parameter value. case bgmyc.prior function provided. function principle easily modified new one used . e.g., replace uniform distribution density functions (dunif) gamma lognormal distributions (dgamma, dlnorm).","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.singlephy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"single tree GMYC analysis — bgmyc.singlephy","text":"conducts Markov Chain Monte Carlo sampling GMYC model ape \"phylo\" object. MCMC output checked non-stationary behavior using plot(output).","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.singlephy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"single tree GMYC analysis — bgmyc.singlephy","text":"Returns list two primary elements.","code":""},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.singlephy.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"single tree GMYC analysis — bgmyc.singlephy","text":"Noah M. Reid","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.spec.html","id":null,"dir":"Reference","previous_headings":"","what":"bGMYC output processing — bgmyc.spec","title":"bGMYC output processing — bgmyc.spec","text":"processes output bgmyc.singlephy bgmyc.multiphylo.","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.spec.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bGMYC output processing — bgmyc.spec","text":"","code":"bgmyc.spec(res, filename = NULL, cmatrix = NULL)"},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.spec.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"bGMYC output processing — bgmyc.spec","text":"res output bgmyc.singlephy bgmyc.multiphylo filename given, file contains species sampled MCMC posterior probabilities cmatrix option may work moment. matrix tree leaves sampling localities. given, returns matrix species samping localities suitable community ecological analysis","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.spec.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"bGMYC output processing — bgmyc.spec","text":"function outputs list one two components. first data frame containing species sampled MCMC posterior probabilities (also optionally output text file \"filename\" given) second optional collection matrices \"cmatrix\" specified. cmatrix tree leaves sampling locality matrix given, collection species sampling locality matrices returned represent posterior distribution species occurrences.","code":""},{"path":[]},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/bgmyc.spec.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"bGMYC output processing — bgmyc.spec","text":"Noah M. Reid","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/checkrates.html","id":null,"dir":"Reference","previous_headings":"","what":"bGMYC output processing — checkrates","title":"bGMYC output processing — checkrates","text":"processes output bgmyc.singlephy bgmyc.multiphylo.","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/checkrates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"bGMYC output processing — checkrates","text":"","code":"checkrates(result)"},{"path":"https://pedrosenna.github.io/bGMYC/reference/checkrates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"bGMYC output processing — checkrates","text":"result output bgmyc.singlephy bgmyc.multiphylo","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/checkrates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"bGMYC output processing — checkrates","text":"function takes results bgmyc.singlephy bgmyc.multiphylo run outputs matrix parameters, including branching rates Yule coalescent processes (place get last two). branching rates may useful evaluating reliability model output (although tested extensively). GMYC based idea coalescent speciation events happen drastically different (perhaps around order magnitude different) rates thus can differentiated phylogenetic tree. rates similar, threshold point model might relatively indistinct results unreliable. Comparison rates might help identify .","code":""},{"path":[]},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/checkrates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"bGMYC output processing — checkrates","text":"Noah M. Reid","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/east10.html","id":null,"dir":"Reference","previous_headings":"","what":"10 trees sampled from a posterior distribution. based on simulated data. — east10","title":"10 trees sampled from a posterior distribution. based on simulated data. — east10","text":"multiphylo object containing 10 trees sampled posterior distribution simulated dataset.","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/east10.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"10 trees sampled from a posterior distribution. based on simulated data. — east10","text":"","code":"data(east10)"},{"path":"https://pedrosenna.github.io/bGMYC/reference/east10.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"10 trees sampled from a posterior distribution. based on simulated data. — east10","text":"format : Class \"multiPhylo\" List 10  $ :List 3   ..$ edge       : int [1:428, 1:2] 216 217 218 219 219 218 220 220 217 221 ...   ..$ edge.length: num [1:428] 9.53e-04 6.80e-02 8.75e-05 6.01e-03 6.01e-03 ...   ..$ Nnode      : int 214   ..- attr(*, \"class\")= chr \"phylo\"  $ :List 3   ..$ edge       : int [1:428, 1:2] 216 217 218 218 219 219 217 216 220 221 ...   ..$ edge.length: num [1:428] 7.07e-02 1.23e-05 4.38e-03 2.15e-03 2.23e-03 ...   ..$ Nnode      : int 214   ..- attr(*, \"class\")= chr \"phylo\"  $ :List 3   ..$ edge       : int [1:428, 1:2] 216 217 218 219 220 221 222 222 221 220 ...   ..$ edge.length: num [1:428] 0.00086 0.02685 0.0232 0.02339 0.00457 ...   ..$ Nnode      : int 214   ..- attr(*, \"class\")= chr \"phylo\"  $ :List 3   ..$ edge       : int [1:428, 1:2] 216 217 218 219 220 221 222 222 221 220 ...   ..$ edge.length: num [1:428] 0.00652 0.01154 0.02245 0.02312 0.0024 ...   ..$ Nnode      : int 214   ..- attr(*, \"class\")= chr \"phylo\"  $ :List 3   ..$ edge       : int [1:428, 1:2] 216 217 217 218 219 219 218 216 220 221 ...   ..$ edge.length: num [1:428] 0.087911 0.005809 0.001012 0.000921 0.003876 ...   ..$ Nnode      : int 214   ..- attr(*, \"class\")= chr \"phylo\"  $ :List 3   ..$ edge       : int [1:428, 1:2] 216 217 218 219 220 221 221 222 222 220 ...   ..$ edge.length: num [1:428] 0.02239 0.02818 0.04245 0.01276 0.00154 ...   ..$ Nnode      : int 214   ..- attr(*, \"class\")= chr \"phylo\"  $ :List 3   ..$ edge       : int [1:428, 1:2] 216 217 218 219 220 220 221 221 222 222 ...   ..$ edge.length: num [1:428] 0.0026 0.04503 0.02079 0.00618 0.00526 ...   ..$ Nnode      : int 214   ..- attr(*, \"class\")= chr \"phylo\"  $ :List 3   ..$ edge       : int [1:428, 1:2] 216 217 218 219 220 221 221 222 222 220 ...   ..$ edge.length: num [1:428] 0.00762 0.02619 0.01898 0.01848 0.00591 ...   ..$ Nnode      : int 214   ..- attr(*, \"class\")= chr \"phylo\"  $ :List 3   ..$ edge       : int [1:428, 1:2] 216 217 217 218 218 219 219 216 220 221 ...   ..$ edge.length: num [1:428] 0.07977 0.00602 0.00214 0.00388 0.00139 ...   ..$ Nnode      : int 214   ..- attr(*, \"class\")= chr \"phylo\"  $ :List 3   ..$ edge       : int [1:428, 1:2] 216 217 218 219 220 221 222 223 223 224 ...   ..$ edge.length: num [1:428] 0.0009 0.01292 0.01373 0.02408 0.00663 ...   ..$ Nnode      : int 214   ..- attr(*, \"class\")= chr \"phylo\"  - attr(*, \"TipLabel\")= chr [1:215] \"JP_133_isolate_133_1\" \"JP_137_isolate_137_1\" \"JP_137_isolate_137_2\" \"JP_137_isolate_137_3\" ...","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/east10.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"10 trees sampled from a posterior distribution. based on simulated data. — east10","text":"","code":"data(east10) ## maybe str(east10) ; plot(east10) ..."},{"path":"https://pedrosenna.github.io/bGMYC/reference/gmyc.5parameter.lik.html","id":null,"dir":"Reference","previous_headings":"","what":"5 parameter likelihood function — gmyc.5parameter.lik","title":"5 parameter likelihood function — gmyc.5parameter.lik","text":"returns likelihood GMYC model 5 parameters free vary","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/gmyc.5parameter.lik.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"5 parameter likelihood function — gmyc.5parameter.lik","text":"","code":"gmyc.5parameter.lik(params, data)"},{"path":"https://pedrosenna.github.io/bGMYC/reference/gmyc.5parameter.lik.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"5 parameter likelihood function — gmyc.5parameter.lik","text":"params vector five five parameters model order y, c, py, pc, t data output gmyc.dataprep","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/gmyc.5parameter.lik.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"5 parameter likelihood function — gmyc.5parameter.lik","text":"Pons et al. implementation GMYC (one) treat model 3 parameters, yule rate change parameter, coalescent rate change parameter threshold parameter. yule coalescent rates fixed ML estimator possible threshold integrated . allowing 5 parameters vary freely cases yields flatter likelihood surface cases (simulation) peak far away true value different 3 parameter implementation. using ML estimator rate parameters yields empirically better peformance use paper (Reid Carstens 2012), took time figure . include function anyone feels like messing .","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/plot.bgmycprobmat.html","id":null,"dir":"Reference","previous_headings":"","what":"plots the matrix of probability of conspecificity — plot.bgmycprobmat","title":"plots the matrix of probability of conspecificity — plot.bgmycprobmat","text":"plots matrix probability conspecificity along tree legend order visualize results","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/plot.bgmycprobmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plots the matrix of probability of conspecificity — plot.bgmycprobmat","text":"","code":"plot.bgmycprobmat(probmat, tree)"},{"path":"https://pedrosenna.github.io/bGMYC/reference/plot.bgmycprobmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plots the matrix of probability of conspecificity — plot.bgmycprobmat","text":"probmat output spec.probmat tree single tree \"phylo\" object format","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/plot.bgmycprobmat.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plots the matrix of probability of conspecificity — plot.bgmycprobmat","text":"plotting function visualizes matrix probabilities conspecificity.","code":""},{"path":[]},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/plot.bgmycprobmat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"plots the matrix of probability of conspecificity — plot.bgmycprobmat","text":"Noah M. Reid","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/plot.bgmycrates.html","id":null,"dir":"Reference","previous_headings":"","what":"plots relative coalescent and Yule rates for model fit evaluation — plot.bgmycrates","title":"plots relative coalescent and Yule rates for model fit evaluation — plot.bgmycrates","text":"plots relative coalescent Yule rates model fit evaluation","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/plot.bgmycrates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plots relative coalescent and Yule rates for model fit evaluation — plot.bgmycrates","text":"","code":"plot.bgmycrates(checkratesoutput)"},{"path":"https://pedrosenna.github.io/bGMYC/reference/plot.bgmycrates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plots relative coalescent and Yule rates for model fit evaluation — plot.bgmycrates","text":"checkratesoutput output checkrates function","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/plot.bgmycrates.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"plots relative coalescent and Yule rates for model fit evaluation — plot.bgmycrates","text":"plots relative coalescent Yule rates model fit evaluation","code":""},{"path":[]},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/plot.bgmycrates.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"plots relative coalescent and Yule rates for model fit evaluation — plot.bgmycrates","text":"Noah M. Reid","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/plot.multibgmyc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot MCMC output — plot.multibgmyc","text":"","code":"plot.multibgmyc(result, plot = TRUE)"},{"path":"https://pedrosenna.github.io/bGMYC/reference/plot.multibgmyc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot MCMC output — plot.multibgmyc","text":"result  plot","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/plot.singlebgmyc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"plot MCMC output — plot.singlebgmyc","text":"","code":"plot.singlebgmyc(result, burnin = 0, thinning = 1)"},{"path":"https://pedrosenna.github.io/bGMYC/reference/plot.singlebgmyc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"plot MCMC output — plot.singlebgmyc","text":"result  burnin  thinning","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/spec.probmat.html","id":null,"dir":"Reference","previous_headings":"","what":"return matrix of probability of conspecificity — spec.probmat","title":"return matrix of probability of conspecificity — spec.probmat","text":"function processes output bgmyc analysis yields matrix probability conspecificity pair leaves given distribution trees","code":""},{"path":"https://pedrosenna.github.io/bGMYC/reference/spec.probmat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"return matrix of probability of conspecificity — spec.probmat","text":"","code":"spec.probmat(res)"},{"path":"https://pedrosenna.github.io/bGMYC/reference/spec.probmat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"return matrix of probability of conspecificity — spec.probmat","text":"res output function bgmyc.spec","code":""},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/spec.probmat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"return matrix of probability of conspecificity — spec.probmat","text":"matrix tree leaves tree leaves whose values probability conspecificity","code":""},{"path":[]},{"path":"https://pedrosenna.github.io/bGMYC/reference/spec.probmat.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"return matrix of probability of conspecificity — spec.probmat","text":"Noah M. Reid","code":""},{"path":[]},{"path":[]},{"path":[]}]
